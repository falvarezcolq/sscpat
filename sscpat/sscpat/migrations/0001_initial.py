# Generated by Django 2.2.10 on 2021-08-13 01:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('last_name2', models.CharField(blank=True, max_length=150, verbose_name='last name 2')),
                ('type', models.CharField(choices=[('STUDENT', 'Student'), ('TUTOR', 'Tutor'), ('EXTERNAL_TUTOR', 'external_tutor'), ('ADMIN', 'admin')], default='STUDENT', max_length=50, verbose_name='Type')),
                ('CI', models.CharField(max_length=255, unique=True, verbose_name='CI')),
                ('RU', models.CharField(blank=True, default='', max_length=255, verbose_name='RU')),
                ('position', models.CharField(blank=True, default='', max_length=255, verbose_name='Position')),
                ('academic_degree', models.CharField(blank=True, default='', max_length=255, verbose_name='academic_degree')),
                ('abbreviation', models.CharField(blank=True, default='', max_length=255, verbose_name='abbreviation')),
                ('phone', models.CharField(blank=True, default='', max_length=255, verbose_name='phone')),
                ('telf', models.CharField(blank=True, default='', max_length=255, verbose_name='phone')),
                ('address', models.CharField(blank=True, default='', max_length=1024, verbose_name='address')),
                ('email', models.EmailField(error_messages={'unique': 'A user with  this email already exists.'}, max_length=254, unique=True, verbose_name='email')),
                ('id_student', models.CharField(blank=True, default='', max_length=30, verbose_name='id student')),
                ('id_teacher', models.CharField(blank=True, default='', max_length=30, verbose_name='id docente')),
                ('id_people', models.CharField(max_length=30, unique=True, verbose_name='id people')),
                ('from_server', models.BooleanField(default=False, verbose_name='from server')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('year', models.CharField(blank=True, default='', max_length=4, verbose_name='year')),
                ('semester', models.PositiveIntegerField(default=1, verbose_name='semester')),
                ('date_init', models.DateField(verbose_name='Date initial')),
                ('date_end', models.DateField(verbose_name='Date end')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcademicProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='description')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('time_send', models.IntegerField(default=-2, verbose_name='time_send')),
            ],
            options={
                'ordering': ('title', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='title')),
                ('format', models.CharField(max_length=32, verbose_name='format')),
                ('size', models.PositiveIntegerField(default=0, verbose_name='size')),
                ('path', models.FileField(upload_to='tracing_student_file/images/', verbose_name='file path')),
                ('img_medium', models.FileField(default=None, max_length=255, null=True, upload_to='tracing_student_file/image_medium', verbose_name='Image Medium')),
                ('thumbnail', models.FileField(default=None, max_length=255, null=True, upload_to='tracing_student_file/thumbnail', verbose_name='Image Small')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('state', models.CharField(choices=[('UNDER_DEVELOPMENT', 'under development '), ('CONCLUDED_SUCCESSFULLY', 'Tutor'), ('ABANDONED', 'external_tutor')], default='UNDER_DEVELOPMENT', max_length=32, verbose_name='state')),
                ('title_academic_project', models.TextField(max_length=1024, unique=True, verbose_name='title of academic project')),
                ('description_project', models.TextField(blank=True, default='', max_length=2048, verbose_name='Description project')),
                ('date_init', models.DateField(verbose_name='date initial')),
                ('date_end', models.DateField(verbose_name='date finalization')),
                ('date_end_old', models.DateField(default=None, null=True, verbose_name='date finalization old')),
                ('extended', models.BooleanField(default=False, verbose_name='date extended')),
                ('month_duration', models.PositiveIntegerField(default=6, verbose_name='month_duration')),
                ('month_max_duration', models.PositiveIntegerField(default=6, verbose_name='month_doration')),
                ('has_time_extension', models.BooleanField(default=False, verbose_name='Has extention time')),
                ('month_extension', models.PositiveIntegerField(default=0, verbose_name='month extension')),
                ('academic_period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='sscpat.AcademicPeriod')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InscriptionDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('deadline_date', models.DateField(default=None, null=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('reviewed_date', models.DateField(default=None, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sscpat.Document', verbose_name='documents')),
                ('file', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sscpat.File', verbose_name='file')),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='sscpat.Inscription', verbose_name='inscriptions')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('responsable', models.CharField(blank=True, default='', max_length=255, verbose_name='responsable')),
                ('phone', models.CharField(blank=True, default='', max_length=255, verbose_name='phone')),
                ('address', models.CharField(blank=True, default='', max_length=255, verbose_name='address')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Modality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='title')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='description')),
                ('document_inscription', models.ManyToManyField(related_name='modalities_document_inscription', to='sscpat.Document')),
                ('documents', models.ManyToManyField(related_name='modalities', to='sscpat.Document')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('message_format', models.CharField(max_length=1024, verbose_name='message')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TracingProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('typetracing', models.CharField(choices=[('ADMIN', 'Admin'), ('INTERNAL_TUTOR', 'Tutor'), ('EXTERNAL_TUTOR', 'External tutor'), ('INSTITUTION_REPORT', 'institution report'), ('COMMENT', 'Comment')], default='COMMENT', max_length=20, null=True, verbose_name='type')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('institution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sscpat.Institution')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TracingStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='description')),
                ('number', models.IntegerField(default=1, verbose_name='progress number')),
                ('month', models.PositiveIntegerField(null=True)),
                ('date_month', models.DateField(null=True, verbose_name='date uploaded')),
                ('is_final_document', models.BooleanField(default=False, verbose_name='is final document')),
                ('require_tutor_review', models.BooleanField(default=False)),
                ('reviewed_by_tutor', models.BooleanField(default=False)),
                ('require_external_tutor_review', models.BooleanField(default=False)),
                ('reviewed_by_external_tutor', models.BooleanField(default=False)),
                ('require_admin_review', models.BooleanField(default=False)),
                ('reviewed_by_admin', models.BooleanField(default=False)),
                ('require_institution_report', models.BooleanField(default=False)),
                ('institution_report_was_sent', models.BooleanField(default=False)),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracingstudents', to='sscpat.Inscription', verbose_name='inscription')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('is_current_profile_picture', models.BooleanField(default=True, verbose_name='current_profile picture')),
                ('img_l', models.FileField(max_length=255, null=True, upload_to='x/x1', verbose_name=' picture size large 1024x1024')),
                ('img_m', models.FileField(default='', max_length=255, null=True, upload_to='x/x5', verbose_name=' picture size medium 400x400')),
                ('thumbnail', models.FileField(default='', max_length=255, null=True, upload_to='x/x4', verbose_name='picture size small 70x70')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TracingStudentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='title')),
                ('format', models.CharField(max_length=32, verbose_name='format')),
                ('path', models.FileField(upload_to='tracing_student_file/', verbose_name='file path')),
                ('img_medium', models.FileField(default=None, max_length=255, null=True, upload_to='tracing_student_file/image_medium', verbose_name='Image Medium')),
                ('thumbnail', models.FileField(default=None, max_length=255, null=True, upload_to='tracing_student_file/thumbnail', verbose_name='Image Small')),
                ('tracingstudent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='sscpat.TracingStudent', verbose_name='inscriptions')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TracingProgressFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='title')),
                ('format', models.CharField(max_length=32, verbose_name='format')),
                ('path', models.FileField(upload_to='tracing_progress_file/', verbose_name='file path')),
                ('img_medium', models.FileField(default=None, max_length=255, null=True, upload_to='tracing_progress_file/image_medium', verbose_name='Image Medium')),
                ('thumbnail', models.FileField(default=None, max_length=255, null=True, upload_to='tracing_progress_file/thumbnail', verbose_name='Image Small')),
                ('tracingprogress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='sscpat.TracingProgress', verbose_name='tracingstundent')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tracingprogress',
            name='tracingstudent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracingprogress', to='sscpat.TracingStudent', verbose_name='tracingstudent'),
        ),
        migrations.AddField(
            model_name='tracingprogress',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('format', models.CharField(choices=[('0', 'No thing'), ('1', 'Account created'), ('2', 'Account add'), ('3', 'Welcome'), ('4', 'Project assigned'), ('6', 'progress uploaded'), ('7', 'review progress uploaded'), ('8', 'Institution report uploaded')], default='0', max_length=2, verbose_name='Type')),
                ('is_read', models.BooleanField(default=False)),
                ('inscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sscpat.Inscription', verbose_name='inscription')),
                ('inscription_document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sscpat.InscriptionDocument', verbose_name='inscription_document')),
                ('tracing_progress', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sscpat.TracingProgress', verbose_name='tracing_progress')),
                ('tracing_student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sscpat.TracingStudent', verbose_name='tracing_student')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('user_action', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications_actions', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Accionador')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='Normative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='title')),
                ('format', models.CharField(max_length=32, verbose_name='format')),
                ('path', models.FileField(upload_to='modality_normative/', verbose_name='file path')),
                ('modality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='normatives', to='sscpat.Modality', verbose_name='modality')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModalityPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('fileconvocatory', models.FileField(max_length=255, null=True, upload_to='convocatory/', verbose_name='file convocatory')),
                ('academicperiod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sscpat.AcademicPeriod')),
                ('modality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sscpat.Modality')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModalityConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('max_author', models.PositiveIntegerField(default=1, verbose_name='max author')),
                ('month_duration', models.PositiveIntegerField(default=6, verbose_name='month_duration')),
                ('month_max_duration', models.PositiveIntegerField(default=6, verbose_name='month_doration')),
                ('has_time_extension', models.BooleanField(default=False, verbose_name='Has extention time')),
                ('month_extension', models.PositiveIntegerField(default=0, verbose_name='month extension')),
                ('has_tutors', models.BooleanField(default=True, verbose_name='has tutors')),
                ('has_institution', models.BooleanField(default=False, verbose_name='has institution')),
                ('mandatory_month_report_progress_student', models.BooleanField(default=True)),
                ('frequency_report_student', models.PositiveIntegerField(default=1)),
                ('mandatory_month_report_tutor', models.BooleanField(default=False)),
                ('frequency_report_tutor', models.PositiveIntegerField(default=1)),
                ('mandatory_month_report_external_tutor', models.BooleanField(default=False)),
                ('frequency_report_external_tutor', models.PositiveIntegerField(default=1)),
                ('mandatory_month_report_institution', models.BooleanField(default=False)),
                ('frequency_report_institution', models.PositiveIntegerField(default=1)),
                ('send_final_document', models.BooleanField(default=False)),
                ('send_abstract_final_document', models.BooleanField(default=False)),
                ('send_resolution_commission_aproval', models.BooleanField(default=False)),
                ('modality', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='sscpat.Modality', verbose_name='modalityconfig')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InscriptionTutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('type', models.CharField(choices=[('INTERNAL_TUTOR', 'Internal tutor'), ('EXTERNAL_TUTOR', 'External tutor')], default='INTERNAL_TUTOR', max_length=16, verbose_name='type tutor')),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sscpat.Inscription', verbose_name='inscriptions')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='tutor')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InscriptionInitialDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='show when the object is active.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the objects was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the objects was last updated.', verbose_name='updated_at')),
                ('deleted_at', models.DateTimeField(help_text='Date time on which the objects was deleted.', null=True, verbose_name='deleted_at')),
                ('created_by', models.PositiveIntegerField(help_text='created_by', null=True)),
                ('updated_by', models.PositiveIntegerField(help_text='updated_by', null=True)),
                ('deleted_by', models.PositiveIntegerField(help_text='deleted_by', null=True)),
                ('deadline_date', models.DateField(default=None, null=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('reviewed_date', models.DateField(default=None, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sscpat.Document', verbose_name='documents')),
                ('file', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sscpat.File', verbose_name='file')),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initialdocuments', to='sscpat.Inscription', verbose_name='inscriptions')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='inscription',
            name='institution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='sscpat.Institution'),
        ),
        migrations.AddField(
            model_name='inscription',
            name='modality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='sscpat.Modality', verbose_name='inscriptions'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sscpat.user',),
        ),
        migrations.CreateModel(
            name='ExternalTutor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sscpat.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sscpat.user',),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sscpat.user',),
        ),
        migrations.AddField(
            model_name='inscription',
            name='external_tutors',
            field=models.ManyToManyField(related_name='etutor_projects', to='sscpat.ExternalTutor'),
        ),
        migrations.AddField(
            model_name='inscription',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='sscpat.Student', verbose_name='students'),
        ),
        migrations.AddField(
            model_name='inscription',
            name='tutors',
            field=models.ManyToManyField(related_name='tutor_projects', to='sscpat.Tutor'),
        ),
    ]
